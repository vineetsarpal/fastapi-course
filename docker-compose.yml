# FOR DEV ENV
version: "3.8"
services:
  api:
    # build = running Docker build cmd
    build: .

    # <port on localhost>:<port on container>
    ports:
      - 8000:8000

     # Bind mount to sync a folder on local to a folder on the docker  container. Any changes in app on local will sync with app on container
     # Binding current directory ./ to /usr/src/app directory on container
    volumes:
      - ./:/usr/src/app

    # env_file:
    #     - ./.env

    environment:
      - DATABASE_HOSTNAME=postgres
      - DATABASE_PORT=5432
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=fastapi
      - DATABASE_USERNAME=postgres
      - SECRET_KEY=a5c0ba934212f0cab74426cb844fec54d4d7aa3c046849b0e57ae73c496d371b
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30

    # Overriding command in Dockerfile to run the app with --reload
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

    depends_on:
      - postgres

  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fastapi
    volumes:
      - postgres-db:/var/lib/postgresql/data

volumes:
  postgres-db:



# Sample FOR PROD ENV

# version: "3.8"
# services:
#   api:
#     image: vineetsarpal/fastapi-course
#     ports:
#       - 80:8000
#     environment:
#       - DATABASE_HOSTNAME=${DATABASE_HOSTNAME}
#       - DATABASE_PORT=${DATABASE_PORT}
#       - DATABASE_PASSWORD=${DATABASE_PASSWORD}
#       - DATABASE_NAME=${DATABASE_NAME}
#       - DATABASE_USERNAME=${DATABASE_USERNAME}
#       - SECRET_KEY=${SECRET_KEY}
#       - ALGORITHM=${ALGORITHM}
#       - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}

#     depends_on:
#       - postgres

#   postgres:
#     image: postgres
#     environment:
#       - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
#       - POSTGRES_DB=${DATABASE_NAME}
#     volumes:
#       - postgres-db:/var/lib/postgresql/data

# volumes:
#   postgres-db: